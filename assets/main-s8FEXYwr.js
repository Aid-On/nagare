var O=Object.defineProperty;var S=(s,e,t)=>e in s?O(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t;var y=(s,e,t)=>S(s,typeof e!="symbol"?e+"":e,t);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))n(r);new MutationObserver(r=>{for(const o of r)if(o.type==="childList")for(const a of o.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&n(a)}).observe(document,{childList:!0,subtree:!0});function t(r){const o={};return r.integrity&&(o.integrity=r.integrity),r.referrerPolicy&&(o.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?o.credentials="include":r.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function n(r){if(r.ep)return;r.ep=!0;const o=t(r);fetch(r.href,o)}})();var M={};let p=null,b=null;const E=()=>typeof process<"u"&&(M.VITEST==="true"||typeof globalThis.describe=="function"),g=()=>({memory:new WebAssembly.Memory({initial:1}),__wbg_set_wasm:()=>{},__wbindgen_export_0:()=>{},__wbindgen_export_1:()=>{},default:async()=>{console.log("Mock WASM module initialized for tests")}});async function k(){if(!p){if(b){await b;return}b=(async()=>{var s;try{if(E()){console.log("Loading mock WASM module for test environment"),p=g();return}typeof window<"u"?(console.warn("WASM loading in browser not yet configured"),p=g()):typeof process<"u"&&((s=process.versions)!=null&&s.node)?(console.warn("WASM loading in Node.js not yet configured"),p=g()):(console.warn("WASM loading not yet configured"),p=g())}catch(e){if(E())console.warn("WASM loading failed in test environment, using mock:",e.message),p=g();else throw console.error("Failed to load WASM module:",e),e}})(),await b}}class u{constructor(e){y(this,"source");y(this,"operators",[]);y(this,"errorHandler");y(this,"terminateOnError",!1);Array.isArray(e)?this.source=e:this.source=e}observe(e,t){const n=new AbortController,r=t==null?void 0:t.signal;let o=!0;const a=()=>{o=!1,n.abort()},i={unsubscribe:a,get isActive(){return o},[Symbol.dispose]:a,[Symbol.asyncDispose]:async()=>a()};return(async()=>{var d;try{for await(const l of this){if(!o||r!=null&&r.aborted||n.signal.aborted)break;try{const m=await this.applyOperators(l);m!==void 0&&e(m)}catch(m){if(t!=null&&t.onError&&t.onError(m),this.terminateOnError)break}}o&&!(r!=null&&r.aborted)&&((d=t==null?void 0:t.onComplete)==null||d.call(t))}catch(l){t!=null&&t.onError&&t.onError(l)}finally{o=!1}})(),i}async applyOperators(e){let t=e;for(const n of this.operators){if(t===void 0)break;try{const r=n(t);t=r instanceof Promise?await r:r}catch(r){if(this.errorHandler){if(t=this.errorHandler(r),t!==void 0)break}else{if(this.terminateOnError)throw r;t=void 0;break}}}return t}map(e){const t=new u(this);return t.operators=[...this.operators,e],t.errorHandler=this.errorHandler,t.terminateOnError=this.terminateOnError,t}filter(e){const t=new u(this),n=async r=>{const o=e(r);return(o instanceof Promise?await o:o)?r:void 0};return t.operators=[...this.operators,n],t.errorHandler=this.errorHandler,t.terminateOnError=this.terminateOnError,t}scan(e,t){let n=t;return this.map(async r=>{const o=e(n,r);return n=o instanceof Promise?await o:o,n})}take(e){let t=0;return this.filter(()=>t++<e)}skip(e){let t=0;return this.filter(()=>++t>e)}fork(e){const t=this.filter(e),n=this.filter(r=>!e(r));return[t,n]}merge(...e){const t=[this,...e],n=async function*(){const r=t.map(a=>a[Symbol.asyncIterator]());let o=new Map;for(let a=0;a<r.length;a++)o.set(a,r[a].next().then(i=>({i:a,r:i})));for(;o.size>0;){const{i:a,r:i}=await Promise.race(o.values());i.done?o.delete(a):(yield i.value,o.set(a,r[a].next().then(d=>({i:a,r:d}))))}};return new u(n())}rescue(e){const t=new u(this);return t.operators=[...this.operators],t.errorHandler=e,t.terminateOnError=this.terminateOnError,t}terminateOnErrorMode(){const e=new u(this);return e.terminateOnError=!0,e}async mapWasm(e,t){await k();const n=new u(this);return n.operators.push(r=>{if(!p)throw new Error("WASM module not loaded");return r instanceof Float32Array?p.process_float32_batch(r,e):r}),n}windowedAggregate(e,t){let n=[];const r=this,o=async function*(){for await(const a of r){if(typeof a!="number")throw new Error("windowedAggregate requires numeric values");if(n.push(a),n.length===e){let i;switch(t){case"mean":i=n.reduce((d,l)=>d+l,0)/n.length;break;case"sum":i=n.reduce((d,l)=>d+l,0);break;case"max":i=Math.max(...n);break;case"min":i=Math.min(...n);break;default:throw new Error(`Unknown operation: ${t}`)}yield i,n.shift()}}};return new u(o())}toReadableStream(){const e=this[Symbol.asyncIterator]();return new ReadableStream({async pull(t){const{value:n,done:r}=await e.next();r?t.close():t.enqueue(n)}})}static fromReadableStream(e){return new u(e)}static from(e){if(e instanceof Promise){const t=async function*(){yield await e};return new u(t())}return new u(e)}static empty(){return new u([])}static of(...e){return new u(e)}async*[Symbol.asyncIterator](){if(this.source instanceof u){this.errorHandler&&!this.source.errorHandler&&(this.source.errorHandler=this.errorHandler,this.source.terminateOnError=this.terminateOnError);for await(const e of this.source){const t=await this.applyOperators(e);t!==void 0&&(yield t)}}else if(this.source instanceof ReadableStream){const e=this.source.getReader();try{for(;;){const{done:t,value:n}=await e.read();if(t)break;const r=await this.applyOperators(n);r!==void 0&&(yield r)}}finally{e.releaseLock()}}else if(typeof this.source=="function"){const e=this.source();for await(const t of e){const n=await this.applyOperators(t);n!==void 0&&(yield n)}}else if(Symbol.asyncIterator in this.source)for await(const e of this.source){const t=await this.applyOperators(e);t!==void 0&&(yield t)}else if(Symbol.iterator in this.source)for(const e of this.source){const t=await this.applyOperators(e);t!==void 0&&(yield t)}}async toArray(){const e=[];for await(const t of this)e.push(t);return e}async first(){for await(const e of this)return e}async last(){let e;for await(const t of this)e=t;return e}async count(){let e=0;for await(const t of this)e++;return e}async all(e){for await(const t of this){const n=e(t);if(!(n instanceof Promise?await n:n))return!1}return!0}async some(e){for await(const t of this){const n=e(t);if(n instanceof Promise?await n:n)return!0}return!1}}function I(s){return new u(s)}function A(s){return u.fromReadableStream(s)}function $(s){return u.from(s)}const h={from:I,fromReadableStream:A,fromPromise:$,empty:()=>new u([]),of:(...s)=>new u(s),range:(s,e,t=1)=>{const n=[];for(let r=s;r<e;r+=t)n.push(r);return new u(n)},interval:(s,e)=>{const t=async function*(){let n=0;for(;!(e!=null&&e.aborted);)yield n++,await new Promise(r=>setTimeout(r,s))};return new u(t())},merge:(...s)=>s[0].merge(...s.slice(1)),combine:(...s)=>{const e=async function*(){const t=s.map(o=>o[Symbol.asyncIterator]()),n=new Array(s.length);let r=new Array(s.length).fill(!1);for(;;){const o=await Promise.all(t.map((i,d)=>i.next().then(l=>({i:d,r:l}))));let a=!0;for(const{i,r:d}of o)d.done||(n[i]=d.value,r[i]=!0,a=!1);if(a)break;r.every(i=>i)&&(yield[...n])}};return new u(e())}};function f(s,e,t=!1){const n=document.getElementById(s);if(t){n.innerHTML="";return}const r=document.createElement("div");for(r.className="stream-item",r.textContent=e,n.appendChild(r);n.children.length>10;)n.removeChild(n.firstChild)}function c(s,e,t=!1){const n=document.getElementById(s);t?n.textContent+=e+`
`:n.textContent=e,n.scrollTop=n.scrollHeight}document.getElementById("basicDemo").addEventListener("click",async()=>{const s=document.getElementById("basicDemo"),e=document.getElementById("basicStop");s.disabled=!0,e.disabled=!1,c("basicOutput",`🚀 Starting basic stream processing...
`),f("basicViz",null,!0);const t=[1,2,3,4,5,6,7,8,9,10],n=h.from(t).map(a=>a*2).filter(a=>a>5).scan((a,i)=>a+i,0),r=[],o=n.observe(a=>{r.push(a),f("basicViz",a),c("basicOutput",`Processed value: ${a}`,!0)},{onComplete:()=>{c("basicOutput",`
✅ Stream completed!
Final result: [${r.join(", ")}]`,!0),s.disabled=!1,e.disabled=!0}});e.onclick=()=>{o.unsubscribe(),c("basicOutput",`
⏹️ Stream stopped by user`,!0),s.disabled=!1,e.disabled=!0}});let w=null;document.getElementById("realtimeDemo").addEventListener("click",()=>{const s=document.getElementById("realtimeDemo"),e=document.getElementById("realtimeStop");s.disabled=!0,e.disabled=!1,c("realtimeOutput",`🌊 Starting real-time stream...
`),f("realtimeViz",null,!0);let t=0;w=h.interval(500).map(r=>({id:r,value:Math.floor(Math.random()*100),timestamp:new Date().toLocaleTimeString()})).filter(r=>r.value>30).observe(r=>{t++,f("realtimeViz",`${r.value}`),c("realtimeOutput",`[${r.timestamp}] Value: ${r.value}`,!0),t>=20&&(w.unsubscribe(),c("realtimeOutput",`
✅ Reached 20 items, stopping...`,!0),s.disabled=!1,e.disabled=!0)}),e.onclick=()=>{w&&(w.unsubscribe(),c("realtimeOutput",`
⏹️ Stream stopped by user`,!0),s.disabled=!1,e.disabled=!0)}});document.getElementById("realtimeStop").addEventListener("click",()=>{w&&w.unsubscribe()});document.getElementById("perfDemo").addEventListener("click",async()=>{const s=document.getElementById("perfDemo");s.disabled=!0,c("perfOutput",`⏱️ Running performance benchmark...
`);const e=1e5,t=Array.from({length:e},(l,m)=>m),n=performance.now(),o=await h.from(t).map(l=>l*2).filter(l=>l%3===0).scan((l,m)=>l+m,0).last(),a=performance.now()-n,i=performance.now();t.map(l=>l*2).filter(l=>l%3===0).reduce((l,m)=>l+m,0);const d=performance.now()-i;document.getElementById("nagareTime").textContent=a.toFixed(2),document.getElementById("jsTime").textContent=d.toFixed(2),document.getElementById("speedup").textContent=(d/a).toFixed(2)+"x",c("perfOutput",`📊 Benchmark Results (${e.toLocaleString()} elements):

Nagare: ${a.toFixed(2)}ms
Native JS: ${d.toFixed(2)}ms
Speedup: ${(d/a).toFixed(2)}x faster

✅ Final value: ${o==null?void 0:o.toLocaleString()}`),s.disabled=!1});let v=null;document.getElementById("mergeDemo").addEventListener("click",()=>{const s=document.getElementById("mergeDemo"),e=document.getElementById("mergeStop");s.disabled=!0,e.disabled=!1,c("mergeOutput",`🔄 Merging multiple streams...
`),f("mergeViz",null,!0);const t=h.interval(1e3).map(i=>`A${i}`).take(5),n=h.interval(1500).map(i=>`B${i}`).take(5),r=h.interval(2e3).map(i=>`C${i}`).take(5),o=t.merge(n,r);let a=0;v=o.observe(i=>{a++,f("mergeViz",i),c("mergeOutput",`Received: ${i} (item #${a})`,!0)},{onComplete:()=>{c("mergeOutput",`
✅ All streams merged and completed!`,!0),s.disabled=!1,e.disabled=!0}}),e.onclick=()=>{v&&(v.unsubscribe(),c("mergeOutput",`
⏹️ Merge stopped by user`,!0),s.disabled=!1,e.disabled=!0)}});document.getElementById("errorDemo").addEventListener("click",async()=>{const s=document.getElementById("errorDemo");s.disabled=!0,c("errorOutput",`🛡️ Testing error recovery...
`),f("errorViz",null,!0);const e=[1,2,3,4,5,6,7,8,9,10],t=h.from(e).map(r=>{if(r===5||r===7)throw new Error(`Error at value ${r}`);return r*2}).rescue(r=>(console.log("Rescued error:",r),-1)),n=[];t.observe(r=>{n.push(r);const o=r===-1;f("errorViz",o?"❌":r),c("errorOutput",o?`⚠️ Error recovered, replaced with: ${r}`:`✅ Processed: ${r}`,!0)},{onComplete:()=>{c("errorOutput",`
✅ Stream completed with error recovery!
Results: [${n.join(", ")}]
Errors handled: ${n.filter(r=>r===-1).length}`,!0),s.disabled=!1}})});document.getElementById("windowDemo").addEventListener("click",async()=>{const s=document.getElementById("windowDemo");s.disabled=!0,c("windowOutput",`📈 Calculating rolling window statistics...
`),f("windowViz",null,!0);const e=Array.from({length:20},(o,a)=>50+Math.sin(a/2)*20+Math.random()*10),t=h.from(e).map(o=>Math.round(o)).windowedAggregate(5,"mean"),n=[];let r=0;t.observe(o=>{r++,n.push(o);const a=Math.round(o);f("windowViz",a),c("windowOutput",`Window ${r}: Average = ${a} (5-item rolling mean)`,!0)},{onComplete:()=>{const o=Math.min(...n),a=Math.max(...n),i=n.reduce((d,l)=>d+l,0)/n.length;c("windowOutput",`
✅ Window aggregation completed!
Windows processed: ${n.length}
Min average: ${Math.round(o)}
Max average: ${Math.round(a)}
Overall average: ${Math.round(i)}`,!0),s.disabled=!1}})});window.addEventListener("DOMContentLoaded",()=>{console.log("🌊 Nagare Demo Loaded!"),c("basicOutput","Ready to demonstrate stream processing..."),c("realtimeOutput","Ready to start real-time stream..."),c("perfOutput","Ready to run performance benchmark..."),c("mergeOutput","Ready to merge streams..."),c("errorOutput","Ready to demonstrate error recovery..."),c("windowOutput","Ready to show window aggregation...")});
